I"‹:<h3 id="paths">Paths</h3>

<h4 id="the-path-element">The <code class="highlighter-rouge">&lt;path&gt;</code> element</h4>

<p>A <code class="highlighter-rouge">&lt;path&gt;</code> element can be used to create arbitrary shapes that behave like any of the standard shapes (with regard to <code class="highlighter-rouge">fill</code>, <code class="highlighter-rouge">stroke</code>, <code class="highlighter-rouge">opacity</code>, etc).
The geometry of a path is specified in its <code class="highlighter-rouge">d</code> (data/description/definition) attribute.</p>

<div class="language-xml col highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;path</span>
  <span class="na">d=</span><span class="s">"..."</span>
  <span class="na">fill=</span><span class="s">"..."</span>
  <span class="na">stroke=</span><span class="s">"..."</span>
<span class="nt">/&gt;</span>
</code></pre></div></div>

<div class="col">
  <a href="images/6-paths/path.svg" target="_blank">
    <img src="images/6-paths/path.svg" alt="6-paths/path.svg" />
  </a>
</div>

<p><a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths"><i class="fas fa-lg fa-external-link-alt"></i>Paths overview</a></p>

<h4 id="the-d-attribute">The <code class="highlighter-rouge">d</code> attribute</h4>

<p>The <code class="highlighter-rouge">d</code> attribute takes a <strong>sequence of draw commands</strong>.
You can think of these commands as moving a paint brush around a canvas.
Commands go <em>from</em> the current point ‚Äì wherever the ‚Äúbrush‚Äù ended up from the previous commands ‚Äì <em>to</em> the specified point.</p>

<p>Each command is a single letter, and can be followed by numerical values to specify where and how to draw the command.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>M 50 50 L 100 100 C 75 100, 50 75, 50 50

M 50,50 L 100,100 C 75,100 50,75 50,50

M 50 50
L 100 100
C 75 100 50 75 50 50
</code></pre></div></div>

<p>The syntax of these commands is similar to that of the points attribute for polygons and polylines.
Values can be separated by spaces or commas.
Letters next to numerical values do not need to be separated at all, because they can be differentiated by the parser just by their type (whereas ‚Äú10,10‚Äù can‚Äôt be condensed to ‚Äú1010‚Äù without looking like one thousand and ten).
Line breaks are also permitted.</p>

<p>There are many different ways to format path strings.
However, for best clarity, it is recommended to separate commands by line, and separate command values by space.</p>

<h4 id="move-to">Move to</h4>

<p>The <code class="highlighter-rouge">M</code> command moves the brush to the specified point without drawing anything between.</p>

<div class="language-xml col highlighter-rouge"><div class="highlight"><pre class="highlight"><code>M x y
</code></pre></div></div>

<div class="col">
  <a href="images/6-paths/path-m.svg" target="_blank">
    <img src="images/6-paths/path-m.svg" alt="6-paths/path-m.svg" />
  </a>
</div>

<p>You will always start a path by specifying a ‚Äúmove to‚Äù point, so the brush has somewhere to start.</p>

<h4 id="line-to">Line to</h4>

<p>The <code class="highlighter-rouge">L</code> command draws a straight line from the previous point to the specified point.</p>

<p>The <code class="highlighter-rouge">H</code> and <code class="highlighter-rouge">V</code> commands draw horizontal and vertical lines, respectively, from the previous point to the specified x or y coordinate.</p>

<div class="language-xml col highlighter-rouge"><div class="highlight"><pre class="highlight"><code>L x y

H x
V y
</code></pre></div></div>

<div class="col">
  <a href="images/6-paths/path-l.svg" target="_blank">
    <img src="images/6-paths/path-l.svg" alt="6-paths/path-l.svg" />
  </a>
</div>

<h4 id="close">Close</h4>

<p>The <code class="highlighter-rouge">Z</code> command closes the current shape, drawing a line back to the first point.</p>

<div class="language-xml col highlighter-rouge"><div class="highlight"><pre class="highlight"><code>M 25 25
L 45 45
M 55 55
L 75 75
L 45 80
Z
</code></pre></div></div>

<div class="col">
  <a href="images/6-paths/path-z.svg" target="_blank">
    <img src="images/6-paths/path-z.svg" alt="6-paths/path-z.svg" />
  </a>
</div>

<p>Because of the ‚Äúmove to‚Äù command, it is possible to draw multiple shapes in the same path element, called ‚Äúsubpaths‚Äù.
The <code class="highlighter-rouge">Z</code> command closes the current subpath.</p>

<h4 id="arc-to">Arc to</h4>

<p>The <code class="highlighter-rouge">A</code> command draws an elliptical arc from the current point to the specified point.</p>

<div class="language-xml col highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A rx ry angle large cw x y

A 50 50 0 0 1 65 75
</code></pre></div></div>

<div class="col">
  <a href="images/6-paths/path-a-1.svg" target="_blank">
    <img src="images/6-paths/path-a-1.svg" alt="6-paths/path-a-1.svg" />
  </a>
</div>

<p>You might expect that arcs would work by specifying the center point and start/end angles.
Instead, it works from start point to end point, and you choose 1 of 4 possible arcs between them.
This unfortunately means that if the start/end angles you want to draw aren‚Äôt multiples of 90 degrees, you‚Äôll have to do some trigonometry to calculate coordinates, and you‚Äôll end up with a lot of non-whole numbers.</p>

<p>The final <code class="highlighter-rouge">x</code>/<code class="highlighter-rouge">y</code> inputs are the end point coordinate.</p>

<figure>
  <a href="images/6-paths/path-a-2.svg" target="_blank">
    <img src="images/6-paths/path-a-2.svg" alt="Arc angle" class="" />
  </a>
  <figcaption>Arc angle</figcaption>
</figure>

<p>The <code class="highlighter-rouge">rx</code> and <code class="highlighter-rouge">ry</code> inputs specify the x and y radii of the ellipse that forms the arc.</p>

<p>The angle input determines the <em>direction the <code class="highlighter-rouge">rx</code> and <code class="highlighter-rouge">ry</code> radii</em>.
<strong>It does not change the start/end points of the arc</strong>.
The angle specifies the clockwise degrees between the <code class="highlighter-rouge">viewBox</code> positive x axis and the positive x axis of the ellipse.</p>

<p>If <code class="highlighter-rouge">rx</code> and <code class="highlighter-rouge">ry</code> are the same, the angle will have no visible effect, because a perfect circle looks the same when rotated.</p>

<figure>
  <a href="images/6-paths/path-a-3.svg" target="_blank">
    <img src="images/6-paths/path-a-3.svg" alt="Arc flags" class="" />
  </a>
  <figcaption>Arc flags</figcaption>
</figure>

<p>Given a certain radius, there are 4 possible arcs that can be drawn between two points.
The <code class="highlighter-rouge">large</code> and <code class="highlighter-rouge">cw</code> (often called the ‚Äúlarge arc‚Äù and ‚Äúsweep‚Äù flags) inputs allow you to specify which of the 4 possible arcs should be used.
These inputs should be set to <code class="highlighter-rouge">0</code> (for false) or <code class="highlighter-rouge">1</code> (for true).</p>

<p>When <code class="highlighter-rouge">large</code> is set to <code class="highlighter-rouge">1</code>, the outer/larger arc is used (shown as dotted lines above).
When <code class="highlighter-rouge">large</code> is set to <code class="highlighter-rouge">0</code>, the inner/smaller arc is used (shown as solid lines above).</p>

<p>When <code class="highlighter-rouge">cw</code> is set to <code class="highlighter-rouge">1</code>, the clockwise arc is used (shown as blue above).
When <code class="highlighter-rouge">cw</code> is set to <code class="highlighter-rouge">0</code>, the counter-clockwise arc used (shown as red above).
Imagine driving a car on the arc from the start point to the end point.
If you have turn right the whole time, the <code class="highlighter-rouge">cw</code> flag is <code class="highlighter-rouge">1</code>.
If you have to turn left the whole time, the <code class="highlighter-rouge">cw</code> flag is <code class="highlighter-rouge">0</code>.</p>

<p>If the radii you‚Äôve specified aren‚Äôt large enough to create an arc to the specified point, they are increased (maintaining proportions) until they are.</p>

<p><a href="https://codepen.io/lingtalfi/pen/yaLWJG"><i class="fas fa-lg fa-external-link-alt"></i>Interactive demonstration of the arc command</a></p>

<h4 id="curve-to">Curve to</h4>

<p>The <code class="highlighter-rouge">C</code> command draws a curve with two control (handle) points from the current point to the specified point.
If you‚Äôve ever tried to draw a curve in a program like Inkscape or Illustrator, you are probably familiar with the ‚Äúhandles‚Äù on each point.
The best way to understand how control points behave and form curves is to just play around with them in one of those programs.</p>

<div class="language-xml col highlighter-rouge"><div class="highlight"><pre class="highlight"><code>C a b c d x y
</code></pre></div></div>

<div class="col">
  <a href="images/6-paths/path-c.svg" target="_blank">
    <img src="images/6-paths/path-c.svg" alt="6-paths/path-c.svg" />
  </a>
</div>

<p><i class="fas fa-lg fa-info-circle"></i>Tip: To connect two curved segments smoothly without any visible joint, make sure that their connecting handle lines are the same slope.</p>

<p><a href="https://en.wikipedia.org/wiki/B%C3%A9zier_curve#Constructing_B%C3%A9zier_curves"><i class="fas fa-lg fa-external-link-alt"></i>Wikipedia article on Bezier Curves</a><br />
<a href="https://www.joshwcomeau.com/posts/dynamic-bezier-curves/"><i class="fas fa-lg fa-external-link-alt"></i>Interactive demonstration of Bezier curves</a></p>

<h4 id="curve-to-shorthand">Curve to shorthand</h4>

<p>The <code class="highlighter-rouge">S</code> command is a quicker way to draw a series of bezier curves in succession.
The command essentially does the same thing as the <code class="highlighter-rouge">C</code> command, except that the <code class="highlighter-rouge">a b</code> control point is assumed to be a reflection of the <code class="highlighter-rouge">c d</code> control point of the previous curve.</p>

<div class="language-xml col highlighter-rouge"><div class="highlight"><pre class="highlight"><code>S c d x y
</code></pre></div></div>

<div class="col">
  <a href="images/6-paths/path-s.svg" target="_blank">
    <img src="images/6-paths/path-s.svg" alt="6-paths/path-s.svg" />
  </a>
</div>

<p>This command should only be used right after a <code class="highlighter-rouge">Q</code> command or another <code class="highlighter-rouge">S</code> command; otherwise there is no previous control point to assume from.</p>

<p>This is how the curve/pen tool in programs like Inkscape and Illustrator typically works, where you click and drag to simultaneously define the first control point of the next curve and the second control point of the previous curve.</p>

<h4 id="quadratic-to">Quadratic to</h4>

<p>The <code class="highlighter-rouge">Q</code> command draws a curve with one control (handle) point from the current point to the specified point.
You can think of it as a simplified version of the <code class="highlighter-rouge">C</code> command, where both control points are the same.</p>

<div class="language-xml col highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Q i j x y
</code></pre></div></div>

<div class="col">
  <a href="images/6-paths/path-q.svg" target="_blank">
    <img src="images/6-paths/path-q.svg" alt="6-paths/path-q.svg" />
  </a>
</div>

<h4 id="quadratic-to-shorthand">Quadratic to shorthand</h4>

<p>The <code class="highlighter-rouge">T</code> command is a quicker way to draw a series of quadratic curves in succession.
The command essentially does the same thing as the <code class="highlighter-rouge">Q</code> command, except that the <code class="highlighter-rouge">i j</code> control point is assumed to be a reflection of the <code class="highlighter-rouge">i j</code> control point of the previous curve.</p>

<div class="language-xml col highlighter-rouge"><div class="highlight"><pre class="highlight"><code>T x y
</code></pre></div></div>

<div class="col">
  <a href="images/6-paths/path-t.svg" target="_blank">
    <img src="images/6-paths/path-t.svg" alt="6-paths/path-t.svg" />
  </a>
</div>

<p>This command should only be used right after a <code class="highlighter-rouge">Q</code> command or another <code class="highlighter-rouge">T</code> command; otherwise there is no previous control point to assume from.</p>

<h4 id="relative-coordinates">Relative coordinates</h4>

<p>Note that all of the previous commands were shown as <strong>capital letters</strong>.
If you provide a lowercase command letter, coordinates you give it are assumed to be relative to the previous coordinate, instead of relative to the origin of the image (absolute).</p>

<div class="language-xml col highlighter-rouge"><div class="highlight"><pre class="highlight"><code>M 25 25
h 50
v 30
l -25 25
l -25 -25
z
</code></pre></div></div>

<div class="col">
  <a href="images/6-paths/relative-coordinates.svg" target="_blank">
    <img src="images/6-paths/relative-coordinates.svg" alt="6-paths/relative-coordinates.svg" />
  </a>
</div>

<p>This can be very useful when you know the difference between each point better than their absolute positions in the overall image.
However, if you will want to tweak individual points without affecting all the following points, you should write your coordinates as absolute.</p>

<h4 id="quirks">Quirks</h4>

<p>If you provide more inputs than are needed for a command, the extra inputs overflow into a new command of the same type.
For example, if you write a ‚Äúline to‚Äù command, and keep providing pairs of coordinates without a new command letter, it will simply be parsed as multiple consecutive line commands.</p>

<p>If you are trying to draw a circle in a path element, you unfortunately cannot draw it with only one arc command; you must split it up into multiple.
It‚Äôs usually the clearest and simplest to just draw two semi-circles.</p>

<div class="language-xml col highlighter-rouge"><div class="highlight"><pre class="highlight"><code>M 10 10
l 35 0
0 35
-35 0
z

M 70 50
a 20 20 0 0 1 0 40
a 20 20 0 0 1 0 -40
z
</code></pre></div></div>

<div class="col">
  <a href="images/6-paths/quirks.svg" target="_blank">
    <img src="images/6-paths/quirks.svg" alt="6-paths/quirks.svg" />
  </a>
</div>

<h4 class="break_before" id="--exercise-4"><i class="fas fa-lg fa-flag-checkered"></i>  EXERCISE 4</h4>

<figure>
  <a href="images/exercises/exercise-4.svg" target="_blank">
    <img src="images/exercises/exercise-4.svg" alt="exercises/exercise-4.svg" class="large_img" />
  </a>
  <figcaption></figcaption>
</figure>

<p>Recreate this SVG using the techniques covered so far.
The exact colors, lengths, and dimensions are not important; just try to capture the basic picture.</p>
:ET